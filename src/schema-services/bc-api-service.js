const { wrapSchema, introspectSchema } = require("@graphql-tools/wrap");
const { makeRemoteExecutor } = require("../lib");

// Need new bearer token after it's expired
const executor = makeRemoteExecutor(
  "https://api-test.bridgecrest.com/graphql",
  {
    Authorization:
      "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGxWMFRPSSIsImtpZCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGxWMFRPSSJ9.eyJhdWQiOiJlZjZhZWZlYi1lMzVkLTQ1MDctYWE2Mi0zZmFlNTc1YjgyYzkiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8xYWZmMDY2OS1lZTVmLTQwYjgtOTgwMC1iNWVjNGYzOWM0OGUvIiwiaWF0IjoxNjU4Mjc0NTkyLCJuYmYiOjE2NTgyNzQ1OTIsImV4cCI6MTY1ODI3ODQ5MiwiYWlvIjoiRTJaZ1lOak44OVhvTHNOdmI0YjVUK2JuZEYwNUFBQT0iLCJhcHBpZCI6IjU1ZjEwYmE1LWJlMmQtNDMwMy1iZjFmLTEyZmI2MTZiYTMyZCIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzFhZmYwNjY5LWVlNWYtNDBiOC05ODAwLWI1ZWM0ZjM5YzQ4ZS8iLCJvaWQiOiI5MjdjMTE4Ny1kYjk0LTQzYjEtOGQyOC0xZmEzNTJmMGM2NDUiLCJyaCI6IjAuQVc0QWFRYl9HbF91dUVDWUFMWHNUem5FanV2dmF1OWQ0d2RGcW1JX3JsZGJnc2x1QUFBLiIsInJvbGVzIjpbIkFjY291bnRfb2M6RHJpdmVUaW1lX2xwOkRyaXZlVGltZV9zcDpEcml2ZVRpbWUiLCJBY2NvdW50X29jOkdPRklOQU5DSUFMX2xwOkdPRklOQU5DSUFMX3NwOkRyaXZlVGltZSIsIkFjY291bnRfb2M6Q0FSVkFOQV9scDpHT0ZJTkFOQ0lBTF9zcDpEcml2ZVRpbWUiLCJBY2NvdW50X29jOkNBUlZBTkFfbHA6QWxseV9zcDpEcml2ZVRpbWUiLCJBY2NvdW50U3RhdHVzX0FMTCIsIkFjY291bnRfb2M6RHJpdmVUaW1lX2xwOkFsbHlfc3A6RHJpdmVUaW1lIiwiQWNjb3VudF9vYzpEcml2ZVRpbWVfbHA6U2N1c2Ffc3A6U2N1c2EiLCJBY2NvdW50X29jOkdvRmlfbHA6R09GSU5BTkNJQUxfc3A6RHJpdmVUaW1lIl0sInN1YiI6IjkyN2MxMTg3LWRiOTQtNDNiMS04ZDI4LTFmYTM1MmYwYzY0NSIsInRpZCI6IjFhZmYwNjY5LWVlNWYtNDBiOC05ODAwLWI1ZWM0ZjM5YzQ4ZSIsInV0aSI6IkF5WVZ1Q1E4VFUyRkx2a3R6MjVxQUEiLCJ2ZXIiOiIxLjAifQ.QNq0Da9fuSvCDUXgcZHKJK97TFRKBwcfPblm8F_6z0Cjdf-Fh-fryiF_5oQV9nNCAseHlAfGf7sey7yyLqmw5rMYqUzAJPHYvqwGis3TtVOet8rSeYdmsQKBkdhgqs8e-jVPrm0YCtzMxeFHn1i-1c8XJIATbSngABloVZhnJOGTZ_hSqcc6BCLZXRSbqOJ3JFr-_lS30CnD7RRM5oluOx_A6Ql8hpY3Lh7YP_xsyE-ub8k-6W9X-ACaTk8FA5COfDvrHYf7Yp9ZDPwJRoIIUSQMRXnz5rTITPIYR_u8QartHccuxOEK2C0qSy4aiWhuWBmxiXX-qzpHl1puuDZ6qQ",
  }
);

const generateBcApiSchema = async function() {
    return await wrapSchema({
        schema: await introspectSchema(executor),
        executor,
        transforms: [],
        // wrapSchema can use transforms to rename query name. Possibly can be used to match BC API queries to the current BFF queries
        // https://www.graphql-tools.com/docs/schema-wrapping
    });
}

module.exports = generateBcApiSchema;
